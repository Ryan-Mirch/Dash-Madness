[gd_scene load_steps=8 format=2]

[ext_resource path="res://images/background.png" type="Texture" id=1]
[ext_resource path="res://images/Player.png" type="Texture" id=2]
[ext_resource path="res://images/Arrow.png" type="Texture" id=3]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 26.1128, 5729.07 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 26.1128, 9902.61 )

[sub_resource type="GDScript" id=4]
script/source = "extends KinematicBody2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

var velocity = Vector2(400,400)
enum {RELEASED, PRESSED}
var pressedState = RELEASED

var pressedPos : Vector2 
var releasedPos : Vector2 
var holdPos : Vector2 

export(float, 0, 0.5) var Deceleration = 0.05
export(float, 5, 20) var DashStrength = 2

onready var dragLine = $\"../Line2D\"
onready var arrow = $\"CollisionShape2D/Pivot/Arrow\"
onready var arrowPivot = $\"CollisionShape2D/Pivot\"

# Called when the node enters the scene tree for the first time.
func _ready():
	updateArrowVisibility()


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass\\

func _physics_process(delta):
	var collision_info = move_and_collide(velocity*delta)
	if collision_info:
		velocity = velocity.bounce(collision_info.normal)
		
	velocity = velocity.linear_interpolate(Vector2(0,0), Deceleration)
	


func _input(event):
	
	
	if pressedState == PRESSED:
		holdPos = event.position
		dragLine.points[1] = holdPos
		changeArrowLength()
		changeArrowDirection()
		
		
	if Input.is_action_just_pressed(\"Left Click\") && pressedState == RELEASED:
		pressedPos = event.position
		print(\"pressed at: \" + str(pressedPos))
		pressedState = PRESSED
		dragLine.points[0] = pressedPos
		updateArrowVisibility()
		
	if Input.is_action_just_released(\"Left Click\") && pressedState == PRESSED:
		releasedPos = event.position
		print(\"released at: \" + str(releasedPos))
		pressedState = RELEASED
		dragLine.points[1] = releasedPos
		velocity = (pressedPos - releasedPos) * -1 * DashStrength
		updateArrowVisibility()
		

func changeArrowLength():
	arrow.rect_size.y = 100 + pressedPos.distance_to(holdPos)
	arrow.rect_position.x = -50 + pressedPos.distance_to(holdPos)
	
func changeArrowDirection():
	var dashDirection = pressedPos.direction_to(holdPos)
	var arrowLookAtPos = position + dashDirection
	arrowPivot.look_at(arrowLookAtPos)
	
func updateArrowVisibility():	
	arrow.visible = (pressedState == PRESSED)
	dragLine.visible = (pressedState == PRESSED)
"

[sub_resource type="CircleShape2D" id=3]
radius = 49.4569

[node name="Root" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Arena" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Background" type="Panel" parent="Arena"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Border" type="NinePatchRect" parent="Arena"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 1 )
region_rect = Rect2( 0, 0, 150, 150 )
patch_margin_left = 42
patch_margin_top = 48
patch_margin_right = 38
patch_margin_bottom = 41
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Physics Walls" type="Node" parent="."]

[node name="Left Wall" type="Control" parent="Physics Walls"]
anchor_top = 0.5
anchor_bottom = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StaticBody2D" type="StaticBody2D" parent="Physics Walls/Left Wall"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Physics Walls/Left Wall/StaticBody2D"]
shape = SubResource( 1 )

[node name="Right Wall" type="Control" parent="Physics Walls"]
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StaticBody2D" type="StaticBody2D" parent="Physics Walls/Right Wall"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Physics Walls/Right Wall/StaticBody2D"]
position = Vector2( 1.5874, 0 )
shape = SubResource( 1 )

[node name="Top Wall" type="Control" parent="Physics Walls"]
anchor_left = 0.5
anchor_right = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StaticBody2D" type="StaticBody2D" parent="Physics Walls/Top Wall"]
rotation = 1.5708

[node name="CollisionShape2D" type="CollisionShape2D" parent="Physics Walls/Top Wall/StaticBody2D"]
shape = SubResource( 2 )

[node name="Bottom Wall" type="Control" parent="Physics Walls"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StaticBody2D" type="StaticBody2D" parent="Physics Walls/Bottom Wall"]
rotation = 1.5708

[node name="CollisionShape2D" type="CollisionShape2D" parent="Physics Walls/Bottom Wall/StaticBody2D"]
shape = SubResource( 2 )

[node name="Player" type="KinematicBody2D" parent="."]
position = Vector2( 297.709, 212.952 )
input_pickable = true
script = SubResource( 4 )
Deceleration = 0.031
DashStrength = 10.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
scale = Vector2( 0.5, 0.5 )
shape = SubResource( 3 )

[node name="Player" type="Sprite" parent="Player/CollisionShape2D"]
texture = ExtResource( 2 )

[node name="Pivot" type="Node2D" parent="Player/CollisionShape2D"]
rotation = 1.5708

[node name="Arrow" type="NinePatchRect" parent="Player/CollisionShape2D/Pivot"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -50.0
margin_top = -100.0
margin_right = 50.0
rect_rotation = 90.0
rect_pivot_offset = Vector2( 50, 100 )
texture = ExtResource( 3 )
patch_margin_top = 69
patch_margin_bottom = 15
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Line2D" type="Line2D" parent="."]
points = PoolVector2Array( 0, 0, 0, 0 )
